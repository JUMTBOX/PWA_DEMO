# Workflow 이름
name: Deploy

# GitHub Actions 실행에 필요한 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# Workflow 트리거 설정
on:
  push:
    branches: [main, develop]
  workflow_dispatch: # 수동 실행 가능하도록 설정

jobs:
  deploy:
    # 실행 환경 지정 (최신 Ubuntu)
    runs-on: ubuntu-latest

    environment:
      # main 브랜치면 production, 아니면 development 환경 사용
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
      # 배포된 페이지의 URL을 환경 변수로 저장
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # 1. 소스코드 체크아웃
      - name: source chekout!
        uses: actions/checkout@v4

      # 2. Node.js 환경 설정
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      # 3. 프로젝트 의존성 설치
      - name: Install dependencies
        run: npm install

      # 4. 빌드 환경 설정
      - name: configure build environment
        id: configure-env # 다른 step에서 참조하기 위한 ID
        run: |
          if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "environment=dev" >> $GITHUB_OUTPUT
            echo "deploy_branch=gh-pages-dev" >> $GITHUB_OUTPUT
          else
            echo "environment=prod" >> $GITHUB_OUTPUT
            echo "deploy_branch=gh-pages" >> $GITHUB_OUTPUT
          fi

      # 5. 프로젝트 빌드
      - name: Build
        env:
          # 환경변수 설정 (.env 파일 대체)
          VITE_API_URL: ${{ env.VITE_API_URL }}
          VITE_APP_ENV: ${{ steps.configure-env.outputs.environment }}
        run: npm run build -- --mode ${{ steps.configure-env.outputs.environment }}

      # 6. GitHub Pages 설정
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # 7. 빌드 결과물을 아티팩트로 업로드
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist" # Vite 빌드 출력 디렉토리

      # 8. GitHub Pages에 배포
      - name: Deploy to github pages ^^
        id: final_deployment
        uses: actions/deploy-pages@v4
        with:
          # develop 브랜치의 경우 미리보기 모드로 배포
          preview: ${{ github.ref != 'refs/heads/main' }}
